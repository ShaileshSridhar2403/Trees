{"ast":null,"code":"import _classCallCheck from\"/home/shailesh/Projects/Trees/Trees/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/shailesh/Projects/Trees/Trees/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/shailesh/Projects/Trees/Trees/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/shailesh/Projects/Trees/Trees/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/shailesh/Projects/Trees/Trees/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from\"axios\";import ReactQuill from'react-quill';import'react-quill/dist/quill.snow.css';import'react-quill/dist/quill.bubble.css';import'./ReactQuilComp.css';var RichTextEditor=/*#__PURE__*/function(_React$Component){_inherits(RichTextEditor,_React$Component);var _super=_createSuper(RichTextEditor);function RichTextEditor(props){var _this;_classCallCheck(this,RichTextEditor);_this=_super.call(this,props);_this.updateNote=function(){var editedNote={title:'title',content:_this.state.content};axios.put(\"/api/notes/\"+_this.state._id,editedNote).then(function(res){console.log(res.data);// this.props.history.push(\"/\");\n});};_this.loadText=function(){_this.quillRef.setContents(JSON.parse(_this.state.content));};_this.quillRef=null;// Quill instance\n_this.reactQuillRef=null;// ReactQuill component\n_this.state={_id:'',title:'',content:'',theme:'snow'};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(RichTextEditor,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;console.log(\"Logging 1\");var curr_id=localStorage.getItem(\"current_id\");console.log(\"Accessing id for\",curr_id);this.quillRef=this.reactQuillRef.getEditor();var curr_id=localStorage.getItem(\"current_id\");axios// .get(\"/api/notes/\" + this.props.match.params.id)\n.get(\"/api/notes/\"+curr_id).then(function(res){_this2.setState({_id:res.data._id,// title: res.data.title,\ncontent:res.data.content});}).then(function(){_this2.loadText();});}},{key:\"handleChange\",value:function handleChange(content,delta,source,editor){this.state.content=JSON.stringify(editor.getContents());}// handleThemeChange (newTheme) {\n//   if (newTheme === \"core\") newTheme = null;\n//   this.setState({ theme: newTheme })\n// }\n},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ReactQuill,{id:\"title\",theme:\"bubble\",onChange:this.handleChange,modules:RichTextEditor.modules,formats:RichTextEditor.formats}),/*#__PURE__*/React.createElement(ReactQuill,{ref:function ref(el){_this3.reactQuillRef=el;},theme:this.state.theme,onChange:this.handleChange,modules:RichTextEditor.modules,formats:RichTextEditor.formats}),/*#__PURE__*/React.createElement(\"button\",{id:\"save\",onClick:this.updateNote},\"Save\"));}}]);return RichTextEditor;}(React.Component);/* \n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */RichTextEditor.modules={toolbar:[[{'header':'1'},{'header':'2'},{'font':[]}],[{size:[]}],['bold','italic','underline','strike','blockquote'],[{'list':'ordered'},{'list':'bullet'},{'indent':'-1'},{'indent':'+1'}],['link','image','video'],['clean']],clipboard:{// toggle to add extra line breaks when pasting HTML:\nmatchVisual:false}};/* \n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */RichTextEditor.formats=['header','font','size','bold','italic','underline','strike','blockquote','list','bullet','indent','link','image','video'];export default RichTextEditor;","map":{"version":3,"sources":["/home/shailesh/Projects/Trees/Trees/client/src/ReactQuilComp.js"],"names":["React","axios","ReactQuill","RichTextEditor","props","updateNote","editedNote","title","content","state","put","_id","then","res","console","log","data","loadText","quillRef","setContents","JSON","parse","reactQuillRef","theme","handleChange","bind","curr_id","localStorage","getItem","getEditor","get","setState","delta","source","editor","stringify","getContents","modules","formats","el","Component","toolbar","size","clipboard","matchVisual"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.bubble.css';\nimport './ReactQuilComp.css'\n\n\nclass RichTextEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.quillRef = null;      // Quill instance\n    this.reactQuillRef = null; // ReactQuill component\n\n    this.state = {\n      _id: '',\n      title: '',\n      content: '',\n      theme: 'snow'\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    console.log(\"Logging 1\")\n    var curr_id = localStorage.getItem(\"current_id\");\n    console.log(\"Accessing id for\",curr_id)\n    this.quillRef = this.reactQuillRef.getEditor();\n    var curr_id = localStorage.getItem(\"current_id\");\n\n    axios\n    // .get(\"/api/notes/\" + this.props.match.params.id)\n    .get(\"/api/notes/\" + curr_id)\n    .then(res => {\n      this.setState({\n        _id: res.data._id,\n        // title: res.data.title,\n        content: res.data.content\n      })\n    })\n    .then(() => {\n      this.loadText()\n    })\n  }\n\n  updateNote = () => {\n    const editedNote = {\n      title: 'title',\n      content: this.state.content,\n    }\n    axios\n    .put(\"/api/notes/\" + this.state._id, editedNote)\n    .then(res => {\n      console.log(res.data)\n      // this.props.history.push(\"/\");\n    })\n  }\n\n  loadText = () => {\n    this.quillRef.setContents(JSON.parse(this.state.content))\n  }\n\n  handleChange (content, delta, source, editor) {\n    this.state.content = JSON.stringify(editor.getContents())\n  }\n\n  // handleThemeChange (newTheme) {\n  //   if (newTheme === \"core\") newTheme = null;\n  //   this.setState({ theme: newTheme })\n  // }\n\n\n  render() {\n    return (\n      <div>\n        <ReactQuill\n          id=\"title\"\n          theme='bubble'\n          onChange={this.handleChange}\n          modules={RichTextEditor.modules}\n          formats={RichTextEditor.formats}\n        />\n        <ReactQuill\n          ref={(el) => { this.reactQuillRef = el }}\n          theme={this.state.theme}\n          onChange={this.handleChange}\n          modules={RichTextEditor.modules}\n          formats={RichTextEditor.formats}\n        />\n        {/* <div className=\"themeSwitcher\">\n          <label>Theme </label>\n          <select onChange={(e) => \n              this.handleThemeChange(e.target.value)}>\n            <option value=\"snow\">Snow</option>\n            <option value=\"bubble\">Bubble</option>\n            <option value=\"core\">Core</option>\n          </select>\n        </div> */}\n        <button id=\"save\" onClick={this.updateNote}>Save</button>\n       </div>\n     )\n  }\n}\n\n/* \n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\nRichTextEditor.modules = {\n  toolbar: [\n    [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n    [{size: []}],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{'list': 'ordered'}, {'list': 'bullet'}, \n     {'indent': '-1'}, {'indent': '+1'}],\n    ['link', 'image', 'video'],\n    ['clean']\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  }\n}\n\n/* \n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nRichTextEditor.formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\nexport default RichTextEditor;"]},"metadata":{},"sourceType":"module"}